mkdir -p projects/web/django && cd projects/web/django/
echo
echo "Make sure Python 3 is installed:"
which python3
virtualenv .
source bin/activate
pip3 install django django-environ pymysql selenium
pip3 freeze > requirements.txt
echo
echo "To install the exact same versions later, run:"
echo "pip3 install -r requirements.txt"
mkdir src && cd src
django-admin startproject boxbusiness .
python3 manage.py migrate
echo
python3 manage.py createsuperuser
echo
python3 manage.py startapp pages
cd ..
echo "bin/" > .gitignore
echo "lib/python3.8/site-packages" >> .gitignore
echo "__pycache__/" >> .gitignore
echo "pyvenv.cfg" >> .gitignore
echo "db.sqlite3" >> .gitignore
echo "*.log" >> .gitignore
echo "*.pot" >> .gitignore
echo "*.pyc" >> .gitignore
echo ".env" >> .gitignore
cd src/boxbusiness/
touch .env
sed '/^SECRET_KEY/q' settings.py | tail -1 > .env
sed -i -- 's/\ //g' .env
sed -i -- 's/^\(from.*\)$/\1\nimport environ\nenv = environ.Env()\nenviron.Env.read_env()/g' settings.py
sed -i -- "s/^SECRET_KEY\(.*\)$/SECRET_KEY = env('SECRET_KEY')/g" settings.py
sed -i -- "s/'DIRS': \[\],/'DIRS': \[BASE_DIR \/ 'templates'\],/g" settings.py
sed -i -- "s/^\(STATIC_URL = .*\)$/\1\nSTATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)/g" settings.py
sed -i -- "s/^\(INSTALLED_APPS = .*\)$/\1\n    'pages',/g" settings.py
sed -i -- "s/^\(from.*\)$/\1\nfrom pages\.views import home/g" urls.py
sed -i -- "s/^\(urlpatterns = .*\)$/\1\n    path('', home, name='home'),/g" urls.py
echo "import pymysql" > __init__.py
echo "pymysql.install_as_MySQLdb()" >> __init__.py
echo "" >> __init__.py
echo "# settings.py:" >> __init__.py
echo "# " >> __init__.py
echo "# DATABASES = {" >> __init__.py
echo "#     'default': {" >> __init__.py
echo "#         'ENGINE': 'django.db.backends.mysql'," >> __init__.py
echo "#         'NAME': env('DB_NAME')," >> __init__.py
echo "#         'USER': env('DB_USER')," >> __init__.py
echo "#         'HOST': env('DB_HOST')," >> __init__.py
echo "#         'PORT': env('DB_PORT')," >> __init__.py
echo "#         'PASSWORD': env('DB_PASSWORD')" >> __init__.py
echo "#     }" >> __init__.py
echo "# }" >> __init__.py
echo "# " >> __init__.py
echo "# terminal:" >> __init__.py
echo "# " >> __init__.py
echo "# python3 manage.py migrate" >> __init__.py
echo "# python3 manage.py inspectdb > models.py" >> __init__.py
cd ..
mkdir templates && cd templates
echo '<!DOCTYPE html>' > base.html
echo '<html>' >> base.html
echo '<head>' >> base.html
echo '    <meta charset="UTF-8">' >> base.html
echo '    {% load static %}' >> base.html
echo '    <link rel="stylesheet" href="' >> base.html
echo "{% static 'css/style.css' %}" >> base.html
echo '">' >> base.html
echo '    <link rel="shortcut icon" href="' >> base.html
echo "{% static 'favicon.ico' %}" >> base.html
echo '">' >> base.html
echo '    <title>{% block title %}BoxBusiness{% endblock %}</title>' >> base.html
echo '</head>' >> base.html
echo '<body>' >> base.html
echo '    {% block content %}replace me{% endblock %}' >> base.html
echo "    {% include 'footer.html' %}" >> base.html
echo '</body>' >> base.html
echo '</html>' >> base.html
echo "{% extends 'base.html' %}{% block content %}<h1>Hello {{ request.user }}</h1>{% endblock %}" > home.html
echo "<footer>the footer</footer>" > footer.html
cd ..
mkdir -p static/js
mkdir -p static/css
cd static
wget https://learndjango.com/static/images/tutorials/favicon/favicon.ico
cd css
echo "body {background-color: #48a94d;}" > style.css
cd ../..
echo "def home(request):" >> pages/views.py
echo "    return render(request, 'home.html', {})" >> pages/views.py
echo -e 'from selenium import webdriver\n' > functional_tests.py
echo -e 'def assert_success(browser):' >> functional_tests.py
echo -e '    try:' >> functional_tests.py
echo -e "        browser.get('http://localhost:8000')" >> functional_tests.py
echo -e "        assert 'BoxBusiness' in browser.title" >> functional_tests.py
echo -e '    finally:' >> functional_tests.py
echo -e '        browser.quit()\n' >> functional_tests.py
echo -e "assert_success(webdriver.Firefox())\n" >> functional_tests.py
echo -e "assert_success(webdriver.Chrome())\n" >> functional_tests.py
echo "# https://www.obeythetestinggoat.com/book/pre-requisite-installations.html" >> functional_tests.py
echo "# Download and copy geckodriver to /usr/local/bin" >> functional_tests.py
echo "# python3 manage.py runserver" >> functional_tests.py
echo "# In another shell, run the automatic tests:" >> functional_tests.py
echo "# python3 functional_tests.py" >> functional_tests.py
echo "# No news is good news!" >> functional_tests.py
cd ..
echo "# BoxBusiness" >> README.md
echo "### Django SetUp" >> README.md
echo "- Adapt and run the [commands](commands.txt)" >> README.md
echo "- Run the [functional tests](src/functional_tests.py)" >> README.md
echo "### MySQL Database" >> README.md
echo 'Edit ```.env``` and ```settings.py``` as described in the [comments](src/boxbusiness/__init__.py)' >> README.md
echo "### VCS with GitHub" >> README.md
echo '```console' >> README.md
echo 'git init' >> README.md
echo 'git add .' >> README.md
echo 'git commit -m "Initial commit"' >> README.md
echo 'git branch -M main' >> README.md
echo 'git remote add origin git@github.com:learling/boxbusiness.git' >> README.md
echo 'git push -u origin main' >> README.md
echo '```" >> README.md'
history | cut -c 8- | tail -n 123 > commands.txt
